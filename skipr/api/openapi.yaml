openapi: 3.0.1
info:
  title: Protected API
  version: v1
servers:
- url: /
paths:
  /expenses:
    get:
      operationId: GetExpenses
      parameters:
      - description: The search string
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: -1
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: -1
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExpenseDTO'
                type: array
          description: Success
      tags:
      - Expenses
    post:
      operationId: CreateExpense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpenseDTO'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDTO'
          description: Success
      tags:
      - Expenses
  /expenses/{expenseId}:
    get:
      operationId: GetExpense
      parameters:
      - explode: false
        in: path
        name: expenseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDTO'
          description: Success
      tags:
      - Expenses
    put:
      operationId: UpdateExpense
      parameters:
      - explode: false
        in: path
        name: expenseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpenseDTO'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDTO'
          description: Success
      tags:
      - Expenses
  /expenses/{expenseId}/logs:
    get:
      operationId: GetExpenseLogs
      parameters:
      - explode: false
        in: path
        name: expenseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The search string
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: -1
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: -1
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: date_from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: date_to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The array of structure
                items:
                  $ref: '#/components/schemas/ExpenseLogDTO'
                type: array
          description: Success
      tags:
      - Expenses
components:
  schemas:
    ExpenseCategory:
      enum:
      - SERVICE
      - PRODUCT
      - PROVIDER
      type: string
    ReviewStatus:
      enum:
      - PENDING
      - APPROVED
      - REFUSED
      - INFO_REQUIRED
      type: string
    RefundStatus:
      enum:
      - PENDING
      - ACCEPTED
      - REFUSED
      type: string
    UserRole:
      enum:
      - ADMIN
      - OPERATOR
      - REVIEWER
      - EMPLOYEE
      type: string
    ExpenseLogAction:
      enum:
      - EDIT_EXPENSE
      type: string
    CreateExpenseDTO:
      properties:
        categorization:
          $ref: '#/components/schemas/ExpenseCategory'
        programId:
          description: The ID of the allocated program
          format: uuid
          type: string
        expenseAt:
          description: The date of the expense
          format: date-time
          type: string
        totalAmount:
          description: The total amount
          type: number
      required:
      - categorization
      - expenseAt
      - programId
      - totalAmount
      type: object
    UpdateExpenseDTO:
      properties:
        categorization:
          $ref: '#/components/schemas/ExpenseCategory'
        programId:
          description: The ID of the allocated program
          format: uuid
          type: string
        expenseAt:
          description: The date of the expense
          format: date-time
          type: string
        totalAmount:
          description: The total amount
          type: number
        reviewStatus:
          $ref: '#/components/schemas/ReviewStatus'
        refundStatus:
          $ref: '#/components/schemas/RefundStatus'
      required:
      - categorization
      - expenseAt
      - programId
      - refundStatus
      - reviewStatus
      - totalAmount
      type: object
    ExpenseDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        totalAmount: 0.8008281904610115
        categorization: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        refundStatus: null
        reviewStatus: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        programId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expenseAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        createdAt:
          description: The creation date of the expense
          format: date-time
          type: string
        modifiedAt:
          description: The modification date of the expense
          format: date-time
          type: string
        categorization:
          $ref: '#/components/schemas/ExpenseCategory'
        programId:
          description: The ID of the allocated program
          format: uuid
          type: string
        expenseAt:
          description: The date of the expense
          format: date-time
          type: string
        totalAmount:
          description: The total amount
          type: number
        reviewStatus:
          $ref: '#/components/schemas/ReviewStatus'
        refundStatus:
          $ref: '#/components/schemas/RefundStatus'
      required:
      - categorization
      - createdAt
      - expenseAt
      - id
      - modifiedAt
      - programId
      - refundStatus
      - reviewStatus
      - totalAmount
      type: object
    ExpenseLogDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        newValue: newValue
        role: null
        field: field
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        author: author
        expenseId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        action: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oldValue: oldValue
      properties:
        id:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
        author:
          type: string
        field:
          type: string
        oldValue:
          type: string
        newValue:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        action:
          $ref: '#/components/schemas/ExpenseLogAction'
        expenseId:
          format: uuid
          type: string
      required:
      - action
      - author
      - createdAt
      - expenseId
      - field
      - id
      - modifiedAt
      - role
      type: object
  securitySchemes:
    oauth2:
      scheme: bearer
      type: http
